package default_package;

import java.util.Scanner;
import java.util.*;
import org.apache.cxf.jaxws.JaxWsProxyFactoryBean;


public class MathConsumer {

    public static void main(String[] args) {

        JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();        

        // Use the URL defined in the soap address portion of the WSDL
        factory.setAddress("http://localhost:8080/ServerSoap/services/ServerSoapPort"); 
       
        // Utilize the class which was auto-generated by Apache CXF wsdl2java
        factory.setServiceClass(ServerSoap.class);        

        Object client = factory.create();
        
        Boolean userAutenticado = false;
        
				

        try {        
        	Scanner sc1 = new Scanner(System.in);
        	while(!userAutenticado) {
        		System.out.println("Selecione o numero da opcao pretendida: \n"
        				+ "1 - Registar\n"
        				+ "2 - Autenticar\n");
        		
        		String input = "";
        		while (sc1.hasNextLine()) {
        		input = sc1.nextLine();
        		String email = "";
    			String password = "";
        		
        		switch(input) {
        		
        		case "1":
        			System.out.println("Introduza o seu email:");
        			email = sc1.nextLine();
        			System.out.println("Introduza uma palavra passe:");
        			password = sc1.nextLine();
        			 String response = ((ServerSoap)client).registarUser(email,password);
        			 System.out.println(response);
        			break;
        		case "2":	
        			System.out.println("Introduza o seu email:");
        			email = sc1.nextLine();
        			System.out.println("Introduza u sua palavra passe:");
        			password = sc1.nextLine();
        			 String response2 = ((ServerSoap)client).autenticarUser(email,password);
        			
        			 if(response2.compareTo("Autenticado com Sucesso") == 0) {
        				 userAutenticado = true;
        				 System.out.println("Autenticado com Sucesso");
        				
        			 } 
        			 break;
        			 default: System.out.println("Insira uma opção do menu");
        			 break;
        		}
        		break;
        		}
        	}
        	
        	Scanner sc = new Scanner(System.in);
        	while(userAutenticado) {
        	System.out.println("Selecione o numero da opcao pretendida: \n"
    				+ "1 - Listar Quartos\n"
    				+ "2 - Reservar Quarto\n"
    				+ "3 - Cancelar Quarto\n");
        	
    		String input = "";
    		
    		while (sc.hasNextLine()) {
	    		input = sc.nextLine();
	    		switch(input) {
		    		case "1":
		    			System.out.println("Introduza a data inicial da reserva no formato aaaa-mm-dd");
	    				String date1 = sc.nextLine();
	    				System.out.println("Introduza a data final da reserva no formato aaaa-mm-dd");
		    	        String date2 = sc.nextLine();
		    	 
		    			List<Integer> response = ((ServerSoap)client).listarQuartos(date1,date2);
		    			int count = 0;
		    			if(response.size() != 0) {
		    				for(Integer idQuarto : response) {
		    				if(count == 0) {
		    					System.out.print(idQuarto);
		    				}else {
		    					System.out.print(", " +  idQuarto);
		    				}
		    				count++;
		    			}
		    			}else {
		    				System.out.println("Não existem quartos disponíveis para as datas introduzidas");
		    			}
		    			 break;
		    		case "2":	
		    			System.out.println("Introduza o numero do quarto para reservar");
    	    			int idRoomReservar = Integer.parseInt(sc.nextLine());
    	    			System.out.println("Introduza o numero de hospedes");
    	    	        int numPessoas = Integer.parseInt(sc.nextLine());
    	    	        System.out.println("Introduza a data inicial da reserva no formato aaaa-mm-dd");
    	    	        String date1Reservar = sc.nextLine();
    	    	        System.out.println("Introduza a data final da reserva no formato aaaa-mm-dd");
    	    	        String date2Reservar = sc.nextLine();
    	    	        System.out.println("Introduza o seu email para identificacao da reserva");
    	    	        String donoReserva = sc.nextLine();
    	    	        
		    			 Boolean responseReservar = ((ServerSoap)client).reservarQuarto(idRoomReservar,numPessoas,date1Reservar,date2Reservar,donoReserva);
		    			 if(responseReservar) {
    	    				 System.out.println("A sua reserva no quarto nº " + idRoomReservar + " entre o dia " + date1Reservar + " e " + date2Reservar + " foi realizada com sucesso.\n");
    	    			 }else {
    	    				 if(String.valueOf(idRoomReservar).charAt(0) == '1' && (numPessoas > 2 || numPessoas < 0) || String.valueOf(idRoomReservar).charAt(0) == '2' && (numPessoas > 3 || numPessoas < 0) || String.valueOf(idRoomReservar).charAt(0) == '3' && (numPessoas > 6 || numPessoas < 0)) {
    	    					 System.out.println("O quarto nº " + idRoomReservar + " não tem capacidade para o número de pessoas que pretende reservar.\n");
    	    				 }else {
    	    					 System.out.println("O quarto nº " + idRoomReservar + " entre o dia " + date1Reservar + " e " + date2Reservar + " já se encontra reservado.\n");
    	    				 }
    	    				 
    	    			 }
		    				break;
		    			  
		    		case "3":
		    			System.out.println("Introduza o numero do quarto da reserva a cancelar");
    	    			int idRoomCancelar = Integer.parseInt(sc.nextLine());
    	    			System.out.println("Introduza a data inicial da reserva no formato aaaa-mm-dd");
    	    			String date1Cancelar = sc.nextLine();
    	    			System.out.println("Introduza a data final da reserva no formato aaaa-mm-dd");
    	    			String date2Cancelar = sc.nextLine();
    	    			
		    			 Boolean responseCancelar = ((ServerSoap)client).cancelarQuarto(idRoomCancelar,date1Cancelar,date2Cancelar);
		    			 if(responseCancelar) {
    	    				 System.out.println("A reserva entre a data " + date1Cancelar + " e " + date2Cancelar + " do quarto nº " + idRoomCancelar + " foi cancelada com sucesso.\n");
    	    			 }else {
    	    				 System.out.println("Não existe reserva no quarto nº " + idRoomCancelar + " nas datas inseridas.\n");
    	    			 }
		    			 break;
		    		default: System.out.println("Selecione uma opção do menu.");
	    			} 
	    		break;
    		}
    		
    		}
        	sc.close();
         // Call the Web Service to perform an operation
          } catch (SecurityException e) {
            e.printStackTrace();
          } catch (IllegalArgumentException e) {
            e.printStackTrace();
          }        
    }
}
    
